{"version":3,"file":"index.js","sources":["../dist-src/version.js","../dist-src/normalize-paginated-list-response.js","../dist-src/iterator.js","../dist-src/paginate.js","../dist-src/index.js"],"sourcesContent":["export const VERSION = \"1.1.2\";\n","/**\n * Some “list” response that can be paginated have a different response structure\n *\n * They have a `total_count` key in the response (search also has `incomplete_results`,\n * /installation/repositories also has `repository_selection`), as well as a key with\n * the list of the items which name varies from endpoint to endpoint:\n *\n * - https://developer.github.com/v3/search/#example (key `items`)\n * - https://developer.github.com/v3/checks/runs/#response-3 (key: `check_runs`)\n * - https://developer.github.com/v3/checks/suites/#response-1 (key: `check_suites`)\n * - https://developer.github.com/v3/apps/installations/#list-repositories (key: `repositories`)\n * - https://developer.github.com/v3/apps/installations/#list-installations-for-a-user (key `installations`)\n *\n * Octokit normalizes these responses so that paginated results are always returned following\n * the same structure. One challenge is that if the list response has only one page, no Link\n * header is provided, so this header alone is not sufficient to check wether a response is\n * paginated or not. For the exceptions with the namespace, a fallback check for the route\n * paths has to be added in order to normalize the response. We cannot check for the total_count\n * property because it also exists in the response of Get the combined status for a specific ref.\n */\nconst REGEX = [\n    /^\\/search\\//,\n    /^\\/repos\\/[^/]+\\/[^/]+\\/commits\\/[^/]+\\/(check-runs|check-suites)([^/]|$)/,\n    /^\\/installation\\/repositories([^/]|$)/,\n    /^\\/user\\/installations([^/]|$)/,\n    /^\\/repos\\/[^/]+\\/[^/]+\\/actions\\/secrets([^/]|$)/,\n    /^\\/repos\\/[^/]+\\/[^/]+\\/actions\\/workflows(\\/[^/]+\\/runs)?([^/]|$)/,\n    /^\\/repos\\/[^/]+\\/[^/]+\\/actions\\/runs(\\/[^/]+\\/(artifacts|jobs))?([^/]|$)/\n];\nexport function normalizePaginatedListResponse(octokit, url, response) {\n    const path = url.replace(octokit.request.endpoint.DEFAULTS.baseUrl, \"\");\n    const responseNeedsNormalization = REGEX.find(regex => regex.test(path));\n    if (!responseNeedsNormalization)\n        return;\n    // keep the additional properties intact as there is currently no other way\n    // to retrieve the same information.\n    const incompleteResults = response.data.incomplete_results;\n    const repositorySelection = response.data.repository_selection;\n    const totalCount = response.data.total_count;\n    delete response.data.incomplete_results;\n    delete response.data.repository_selection;\n    delete response.data.total_count;\n    const namespaceKey = Object.keys(response.data)[0];\n    const data = response.data[namespaceKey];\n    response.data = data;\n    if (typeof incompleteResults !== \"undefined\") {\n        response.data.incomplete_results = incompleteResults;\n    }\n    if (typeof repositorySelection !== \"undefined\") {\n        response.data.repository_selection = repositorySelection;\n    }\n    response.data.total_count = totalCount;\n    Object.defineProperty(response.data, namespaceKey, {\n        get() {\n            octokit.log.warn(`[@octokit/paginate-rest] \"response.data.${namespaceKey}\" is deprecated for \"GET ${path}\". Get the results directly from \"response.data\"`);\n            return Array.from(data);\n        }\n    });\n}\n","import { normalizePaginatedListResponse } from \"./normalize-paginated-list-response\";\nexport function iterator(octokit, route, parameters) {\n    const options = octokit.request.endpoint(route, parameters);\n    const method = options.method;\n    const headers = options.headers;\n    let url = options.url;\n    return {\n        [Symbol.asyncIterator]: () => ({\n            next() {\n                if (!url) {\n                    return Promise.resolve({ done: true });\n                }\n                return octokit\n                    .request({ method, url, headers })\n                    .then((response) => {\n                    normalizePaginatedListResponse(octokit, url, response);\n                    // `response.headers.link` format:\n                    // '<https://api.github.com/users/aseemk/followers?page=2>; rel=\"next\", <https://api.github.com/users/aseemk/followers?page=2>; rel=\"last\"'\n                    // sets `url` to undefined if \"next\" URL is not present or `link` header is not set\n                    url = ((response.headers.link || \"\").match(/<([^>]+)>;\\s*rel=\"next\"/) || [])[1];\n                    return { value: response };\n                });\n            }\n        })\n    };\n}\n","import { iterator } from \"./iterator\";\nexport function paginate(octokit, route, parameters, mapFn) {\n    if (typeof parameters === \"function\") {\n        mapFn = parameters;\n        parameters = undefined;\n    }\n    return gather(octokit, [], iterator(octokit, route, parameters)[Symbol.asyncIterator](), mapFn);\n}\nfunction gather(octokit, results, iterator, mapFn) {\n    return iterator.next().then(result => {\n        if (result.done) {\n            return results;\n        }\n        let earlyExit = false;\n        function done() {\n            earlyExit = true;\n        }\n        results = results.concat(mapFn ? mapFn(result.value, done) : result.value.data);\n        if (earlyExit) {\n            return results;\n        }\n        return gather(octokit, results, iterator, mapFn);\n    });\n}\n","import { VERSION } from \"./version\";\nimport { paginate } from \"./paginate\";\nimport { iterator } from \"./iterator\";\n/**\n * @param octokit Octokit instance\n * @param options Options passed to Octokit constructor\n */\nexport function paginateRest(octokit) {\n    return {\n        paginate: Object.assign(paginate.bind(null, octokit), {\n            iterator: iterator.bind(null, octokit)\n        })\n    };\n}\npaginateRest.VERSION = VERSION;\n"],"names":[],"mappings":"AAAO,MAAM,OAAO,GAAG,mBAAmB,CAAC;;ACA3C;;;;;;;;;;;;;;;;;;;;AAoBA,MAAM,KAAK,GAAG;IACV,aAAa;IACb,2EAA2E;IAC3E,uCAAuC;IACvC,gCAAgC;IAChC,kDAAkD;IAClD,oEAAoE;IACpE,2EAA2E;CAC9E,CAAC;AACF,AAAO,SAAS,8BAA8B,CAAC,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE;IACnE,MAAM,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IACxE,MAAM,0BAA0B,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACzE,IAAI,CAAC,0BAA0B;QAC3B,OAAO;;;IAGX,MAAM,iBAAiB,GAAG,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC;IAC3D,MAAM,mBAAmB,GAAG,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC;IAC/D,MAAM,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;IAC7C,OAAO,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC;IACxC,OAAO,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC;IAC1C,OAAO,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;IACjC,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACzC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,IAAI,OAAO,iBAAiB,KAAK,WAAW,EAAE;QAC1C,QAAQ,CAAC,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;KACxD;IACD,IAAI,OAAO,mBAAmB,KAAK,WAAW,EAAE;QAC5C,QAAQ,CAAC,IAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;KAC5D;IACD,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;IACvC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,EAAE,YAAY,EAAE;QAC/C,GAAG,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,wCAAwC,EAAE,YAAY,CAAC,yBAAyB,EAAE,IAAI,CAAC,gDAAgD,CAAC,CAAC,CAAC;YAC5J,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC3B;KACJ,CAAC,CAAC;CACN;;ACzDM,SAAS,QAAQ,CAAC,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE;IACjD,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;IAC5D,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;IAC9B,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;IAChC,IAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;IACtB,OAAO;QACH,CAAC,MAAM,CAAC,aAAa,GAAG,OAAO;YAC3B,IAAI,GAAG;gBACH,IAAI,CAAC,GAAG,EAAE;oBACN,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;iBAC1C;gBACD,OAAO,OAAO;qBACT,OAAO,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC;qBACjC,IAAI,CAAC,CAAC,QAAQ,KAAK;oBACpB,8BAA8B,CAAC,OAAO,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;;;;oBAIvD,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,EAAE,KAAK,CAAC,yBAAyB,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;oBAChF,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC;iBAC9B,CAAC,CAAC;aACN;SACJ,CAAC;KACL,CAAC;CACL;;ACxBM,SAAS,QAAQ,CAAC,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE;IACxD,IAAI,OAAO,UAAU,KAAK,UAAU,EAAE;QAClC,KAAK,GAAG,UAAU,CAAC;QACnB,UAAU,GAAG,SAAS,CAAC;KAC1B;IACD,OAAO,MAAM,CAAC,OAAO,EAAE,EAAE,EAAE,QAAQ,CAAC,OAAO,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;CACnG;AACD,SAAS,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE;IAC/C,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,IAAI;QAClC,IAAI,MAAM,CAAC,IAAI,EAAE;YACb,OAAO,OAAO,CAAC;SAClB;QACD,IAAI,SAAS,GAAG,KAAK,CAAC;QACtB,SAAS,IAAI,GAAG;YACZ,SAAS,GAAG,IAAI,CAAC;SACpB;QACD,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAChF,IAAI,SAAS,EAAE;YACX,OAAO,OAAO,CAAC;SAClB;QACD,OAAO,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;KACpD,CAAC,CAAC;CACN;;ACpBD;;;;AAIA,AAAO,SAAS,YAAY,CAAC,OAAO,EAAE;IAClC,OAAO;QACH,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE;YAClD,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;SACzC,CAAC;KACL,CAAC;CACL;AACD,YAAY,CAAC,OAAO,GAAG,OAAO,CAAC;;;;"}