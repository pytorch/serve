name: CI CPU - CPP Build

on:
  workflow_dispatch:
  push:
    branches:
      - master

concurrency:
  group: ci-cpu-${{ github.workflow }}-${{ github.ref == 'refs/heads/master' && github.run_number || github.ref }}
  cancel-in-progress: true

jobs:
  ci-cpu-cpp:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
    steps:
      # - name: Setup Python for M1
      #   if: matrix.os == 'macos-14'
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: '3.10'
      - name: Setup Python for all other OS
        if: matrix.os != 'macos-14'
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
          architecture: x64
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Checkout TorchServe
        uses: actions/checkout@v3
        with:
          submodules: recursive
      # - name: Install libtorch - macOS
      #   if: matrix.os == 'macOS-latest'
      #   run: |
      #       brew install libtorch
      - name: Install dependencies
        run: |
          sudo apt update && python ts_scripts/install_dependencies.py --environment=dev --cpp
      - name: Install TorchServe
        run: |
          python ts_scripts/install_from_src.py
      - name: Print Env
        run: |
          python ts_scripts/print_env_info.py
      - name: Build
        run: |
          cd cpp && rm -rf _build && sudo mkdir /mnt/_build && sudo chmod 777 /mnt/_build && mkdir build && sudo mount --bind /mnt/_build build
          cd build && cmake ..
          make -j && make install
          make test
      - name: Run test
        run: |
          cd test && pytest pytest/test_cpp_backend.py
