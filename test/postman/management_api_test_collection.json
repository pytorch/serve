{
	"info": {
		"_postman_id": "4d8b1327-d0b4-4e37-9544-06b57d9b480f",
		"name": "torchserve_regression_management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register Model",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1c2662e6-d670-4a18-b6c6-2830eb28827f",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models?url=https://torchserve.s3.amazonaws.com/mar_files/squeezenet1_1.mar&model_name=squeezenet1_1",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models"
					],
					"query": [
						{
							"key": "url",
							"value": "https://torchserve.s3.amazonaws.com/mar_files/squeezenet1_1.mar"
						},
						{
							"key": "model_name",
							"value": "squeezenet1_1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Valid Model",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ecfbb15c-bc6d-4a32-8f9e-ff65db81ab0b",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models/squeezenet1_1",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models",
						"squeezenet1_1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Model with Version",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "72072739-e588-4214-b4f7-3761c3861317",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models/squeezenet1_1/1.0",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models",
						"squeezenet1_1",
						"1.0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Model - All Versions",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cc0baaca-46eb-4cdc-a756-2d430cc71cdc",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models/squeezenet1_1/all",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models",
						"squeezenet1_1",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Models",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fd3e359f-fe11-4075-8977-f8a169d16fb4",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models"
					]
				}
			},
			"response": []
		},
		{
			"name": "Scale Min Workers - Asynchronous",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aefbd490-f4f7-4d8a-9e8e-ad9489ab5784",
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models/squeezenet1_1?min_worker=3",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models",
						"squeezenet1_1"
					],
					"query": [
						{
							"key": "min_worker",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Scale Min Workers - Synchronous",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "762ffec5-7c7e-40f0-ad45-6f1c1983b754",
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models/squeezenet1_1?min_worker=4&synchronous=true",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models",
						"squeezenet1_1"
					],
					"query": [
						{
							"key": "min_worker",
							"value": "4"
						},
						{
							"key": "synchronous",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Scale Min Workers for a Version",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ce1c4c1c-761f-4e5d-9f04-f29247a88c34",
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models/squeezenet1_1/1.0?min_worker=5&synchronous=true",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models",
						"squeezenet1_1",
						"1.0"
					],
					"query": [
						{
							"key": "min_worker",
							"value": "5"
						},
						{
							"key": "synchronous",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Scale Min Workers with GPU",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "84b164c5-e5f6-4226-aeab-483fd8aab514",
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models/squeezenet1_1?min_worker=6&number_gpu=1",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models",
						"squeezenet1_1"
					],
					"query": [
						{
							"key": "min_worker",
							"value": "6"
						},
						{
							"key": "number_gpu",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Set Default Model Version",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2bc3625e-0800-49fb-bf12-aa848b9ba356",
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models/squeezenet1_1/1.0/set-default",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models",
						"squeezenet1_1",
						"1.0",
						"set-default"
					]
				}
			},
			"response": []
		},
		{
			"name": "UnRegister Model",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dd998033-3eea-4bb5-9353-18d6d1f885d8",
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models/squeezenet1_1",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models",
						"squeezenet1_1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register Model with Additional Params",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "942b750b-088a-4355-89a8-89b0d263e1fc",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models?url=squeezenet1_1.mar&model_name=squeezenet1_1&handler=serve/ts/torch_handler/image_classifier.py:handle",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models"
					],
					"query": [
						{
							"key": "url",
							"value": "squeezenet1_1.mar"
						},
						{
							"key": "model_name",
							"value": "squeezenet1_1"
						},
						{
							"key": "handler",
							"value": "serve/ts/torch_handler/image_classifier.py:handle"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Register Model with Batch Size",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8a56636d-24b1-439c-b28e-1029db0a141c",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models?url=https://torchserve.s3.amazonaws.com/mar_files/resnet-152-batch.mar&model_name=resnet152&batch_size=2",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models"
					],
					"query": [
						{
							"key": "url",
							"value": "https://torchserve.s3.amazonaws.com/mar_files/resnet-152-batch.mar"
						},
						{
							"key": "model_name",
							"value": "resnet152"
						},
						{
							"key": "batch_size",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Register Model Intial Workers 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f6781541-2e92-4837-b6f9-26c61e28de8e",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models?url=https://torchserve.s3.amazonaws.com/mar_files/vgg11.mar&model_name=vgg11&initial_workers=0",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models"
					],
					"query": [
						{
							"key": "url",
							"value": "https://torchserve.s3.amazonaws.com/mar_files/vgg11.mar"
						},
						{
							"key": "model_name",
							"value": "vgg11"
						},
						{
							"key": "initial_workers",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Register Model Synchronous",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "073bc446-c12f-4a2d-8fa1-044914642de2",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models?url=https://torchserve.s3.amazonaws.com/mar_files/resnet-18.mar&model_name=resnet18&synchronous=true",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models"
					],
					"query": [
						{
							"key": "url",
							"value": "https://torchserve.s3.amazonaws.com/mar_files/resnet-18.mar"
						},
						{
							"key": "model_name",
							"value": "resnet18"
						},
						{
							"key": "synchronous",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "UnRegister Model",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aa6f207e-d9ce-40cb-ab08-d7ca03ba2927",
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models/resnet18",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models",
						"resnet18"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register Resnet Model",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9e195654-9864-46d4-896d-39926d89ffb3",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models?url=resnet-18.mar&model_name=resnet18&synchronous=false",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models"
					],
					"query": [
						{
							"key": "url",
							"value": "resnet-18.mar"
						},
						{
							"key": "model_name",
							"value": "resnet18"
						},
						{
							"key": "synchronous",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List with Limit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "76830b62-cb97-4a8e-8380-6862a6743c8b",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models?limit=1",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models"
					],
					"query": [
						{
							"key": "limit",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List with Pagination",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e6bb5722-8b6f-4440-a74e-728c9b2f7efd",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models?limit=1&next_page_token=1",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models"
					],
					"query": [
						{
							"key": "limit",
							"value": "1"
						},
						{
							"key": "next_page_token",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update GPU Count",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b678f1b6-26aa-4fe9-b2af-382f5dbf7874",
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models/resnet18?number_gpu=10",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models",
						"resnet18"
					],
					"query": [
						{
							"key": "number_gpu",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Scale up Workers -  Synchronous",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "da09183e-d2d3-4100-bbb6-01395b56c0e0",
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models/resnet18?min_worker=5&max_worker=5&synchronous=true",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models",
						"resnet18"
					],
					"query": [
						{
							"key": "min_worker",
							"value": "5"
						},
						{
							"key": "max_worker",
							"value": "5"
						},
						{
							"key": "synchronous",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Scale up Workers - Asynchronous",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9e1c800a-84fa-4181-ac5c-083c5071b993",
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models/resnet18?min_worker=6&max_worker=6&synchronous=false",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models",
						"resnet18"
					],
					"query": [
						{
							"key": "min_worker",
							"value": "6"
						},
						{
							"key": "max_worker",
							"value": "6"
						},
						{
							"key": "synchronous",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Timeout to -1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9b5509db-0260-4e36-a304-586b006e86ee",
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models/resnet18?timeout=-1",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models",
						"resnet18"
					],
					"query": [
						{
							"key": "timeout",
							"value": "-1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Timeout to 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "13a0ea39-854a-4551-adf3-d1e1aac269d6",
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models/resnet18?timeout=0",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models",
						"resnet18"
					],
					"query": [
						{
							"key": "timeout",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Register Model - Invalid URL",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "66f910d7-cc2f-4b60-8f94-df8304dd399f",
						"exec": [
							"pm.test(\"Invalid URL POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models?url=https://torchserve.s3.amazonaws.com/mar_files/invalid-resnet-18.mar&model_name=invalid-resnet18",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models"
					],
					"query": [
						{
							"key": "url",
							"value": "https://torchserve.s3.amazonaws.com/mar_files/invalid-resnet-18.mar"
						},
						{
							"key": "model_name",
							"value": "invalid-resnet18"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Model - Invalid Model",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "207f7c2b-1d69-4292-bb4f-31a3147fc43b",
						"exec": [
							"pm.test(\"Valid ERROR message\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models/invalid_squeezenet1_1",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models",
						"invalid_squeezenet1_1"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Models - Invalid Next Page Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a97a22d6-1945-4992-81d0-e7508c5affa4",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models?next_page_token=12",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models"
					],
					"query": [
						{
							"key": "next_page_token",
							"value": "12"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Worker with Invalid Worker Count",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "45736133-bb05-4dd7-80e9-f0d9f657a17f",
						"exec": [
							"pm.test(\"Valid ERROR message\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models/resnet18?min_worker=10&max_worker=9",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models",
						"resnet18"
					],
					"query": [
						{
							"key": "min_worker",
							"value": "10"
						},
						{
							"key": "max_worker",
							"value": "9"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Version - Invalid Model",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7a7e5033-0d32-4b11-a53f-b6e2e4f7ba61",
						"exec": [
							"pm.test(\"Valid ERROR message\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models/invalid_squeezenet1_1/1.0/set-default",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models",
						"invalid_squeezenet1_1",
						"1.0",
						"set-default"
					]
				}
			},
			"response": []
		},
		{
			"name": "UnRegister Invalid Model Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b0a0fa12-2de1-474e-8869-33a7c5a0895d",
						"exec": [
							"pm.test(\"Valid ERROR message\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{hostname}}:{{mgmt-port}}/models/invalid_squeezenet1_1",
					"protocol": "{{protocol}}",
					"host": [
						"{{hostname}}"
					],
					"port": "{{mgmt-port}}",
					"path": [
						"models",
						"invalid_squeezenet1_1"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "35867f37-7b99-42a5-823e-1bde5ff3b207",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "85a997ec-639c-4e3e-b685-a44799ed33d6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}